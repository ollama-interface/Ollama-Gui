name: Build and Deploy

on:
  push:
    branches:
      - github-actions-setup

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Add target architecture
        run: rustup target add aarch64-apple-darwin

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm i

      - name: Build for MacOS Silicon
        run: pnpm build:app:silicon

      - name: Archive MacOS Silicon artifacts
        uses: actions/upload-artifact@v3
        with:
          name: macos-silicon
          path: src-tauri/target/aarch64-apple-darwin/release/bundle/macos/rw.ollama-interface_0.1.0_aarch64.dmg # paths like this needs to be fixed
          # path: src-tauri/target/release/bundle/dmg/*.dmg # something like this would be preferable

      - name: Build for MacOS Intel
        run: pnpm build:app:intell

      - name: Archive MacOS Intel artifacts
        uses: actions/upload-artifact@v3
        with:
          name: macos-intel
          path: src-tauri/target/x86_64-apple-darwin/release/bundle/dmg/ollama-interface_0.1.0_x64.dmg # paths like this needs to be fixed
          # path: src-tauri/target/release/bundle/dmg/*.dmg # something like this would be preferable
      
      - name: Build for MacOS Universal
        run: pnpm build:app:universal

      - name: Archive MacOS Universal artifacts
        uses: actions/upload-artifact@v3
        with:
          name: macos-universal
          path: src-tauri/target/universal-apple-darwin/release/bundle/dmg/ollama-interface_0.1.0_universal.dmg # paths like this needs to be fixed
          # path: src-tauri/target/release/bundle/dmg/*.dmg # something like this would be preferable

      # Future implementation for windows
      # - name: Build for Windows
      #   run: pnpm build:app:windows

      # - name: Archive Windows artifacts
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: windows
      #     path: src-tauri/target/release/bundle/windows/* # Adjust this path if necessary

      # Future implementation for linux
      # - name: Build for Linux
      #   run: pnpm build:app:linux

      # - name: Archive Linux artifacts
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: linux
      #     path: src-tauri/target/release/bundle/linux/* # Adjust this path if necessary

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset (MacOS Silicon)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./macos-silicon/*.dmg
          asset_name: Ollama-Gui-MacOS-Silicon.dmg
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (MacOS Intel)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./macos-intel/*.dmg
          asset_name: Ollama-Gui-MacOS-Intel.dmg
          asset_content_type: application/octet-stream
